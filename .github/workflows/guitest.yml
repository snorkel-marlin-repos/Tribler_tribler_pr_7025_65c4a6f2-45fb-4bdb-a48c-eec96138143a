name: GUI test

on:
  workflow_call:
    inputs:
      python-version:
        default: 3.8
        type: string
        required: false

      matrix:
        default: '{"os":["windows-latest", "macos-latest", "ubuntu-latest"]}'
        type: string
        required: false

      enable-profiling:
        default: false
        type: boolean
        required: false

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(inputs.matrix)}}

    defaults:
      run:
        shell: bash

    timeout-minutes: 10

    env:
      PYTEST_ARGUMENTS: ./src/tribler/gui --guitests --randomly-seed=1 --exitfirst --disable-warnings

    steps:
      - uses: actions/checkout@v3

      - name: Create python environment
        uses: ./.github/actions/pyenv
        with:
          python-version: ${{inputs.python-version}}
          requirements: requirements-test.txt

      - name: Install dependencies (Win)
        if: runner.os == 'Windows'
        uses: ./.github/actions/windows_dependencies

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt install pyqt5-dev-tools

      - name: Setup headless display (Linux)
        if: runner.os == 'Linux'
        uses: pyvista/setup-headless-display-action@v1

      - name: Add --looptime
        if: runner.os != 'Windows'
        run: |
          echo "PYTEST_ARGUMENTS=$PYTEST_ARGUMENTS --looptime" >> $GITHUB_ENV

      - name: Run GUI tests
        if: ${{!inputs.enable-profiling}}
        run: |
          pytest ${PYTEST_ARGUMENTS}

      - name: Run GUI tests (Profiler)
        if: ${{inputs.enable-profiling}}
        uses: ./.github/actions/profile
        with:
          artifact_name: guitests_prof.svg
          arguments: ${PYTEST_ARGUMENTS}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ${{runner.os}}_screenshots
          path: ./src/tribler/gui/screenshots/
          retention-days: 1
